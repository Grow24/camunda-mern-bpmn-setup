# name: docs-prod

# services:
#   minio:
#     image: minio/minio
#     environment:
#       - MINIO_ROOT_USER=grow24_office_docs
#       - MINIO_ROOT_PASSWORD=your-secure-minio-password
#     ports:
#       - '20009:9000'
#       - '20010:9001'
#     healthcheck:
#       test: ["CMD", "mc", "ready", "local"]
#       interval: 5s
#       timeout: 20s
#       retries: 60
#     entrypoint: ""
#     command: minio server --console-address :9001 /data
#     volumes:
#       - ./data/media:/data
#     restart: unless-stopped

#   createbuckets:
#     image: minio/mc
#     depends_on:
#       minio:
#         condition: service_healthy
#         restart: true
#     entrypoint: >
#       sh -c "
#       /usr/bin/mc alias set grow24-office-docs http://minio:9000 grow24_office_docs your-secure-minio-password && \
#       /usr/bin/mc mb grow24-office-docs/grow24-office-docs-media-storage && \
#       /usr/bin/mc version enable grow24-office-docs/grow24-office-docs-media-storage && \
#       exit 0;"
#     restart: "no"

#   app-prod:
#     build:
#       context: .
#       target: backend-production-docs
#       args:
#         DOCKER_USER: "1000"
#     user: "1000"
#     image: grow24_office_docs:backend-production-docs
#     environment:
#       - DJANGO_CONFIGURATION=Production
#       - DJANGO_ALLOWED_HOSTS=docs.intelligentsalesman.com,localhost,127.0.0.1,118.139.165.145
#     env_file:
#       - env.d/grow24/common
#     ports:
#       - "20001:8000"
#     volumes:
#       - ./data/static:/data/static
#     depends_on:
#       minio:
#         condition: service_healthy
#         restart: true
#       # createbuckets:
#       #   condition: service_completed_successfully
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1.0/"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   celery-prod:
#     user: "1000"
#     image: grow24_office_docs:backend-production
#     command: ["celery", "-A", "grow24_office_docs.celery_app", "worker", "-l", "INFO"]
#     environment:
#       - DJANGO_CONFIGURATION=Production
#     env_file:
#       - env.d/grow24/common
#     volumes:
#       - ./data/static:/data/static
#     depends_on:
#       - app-prod
#     restart: unless-stopped

#   frontend-production:
#     build: 
#       context: .
#       dockerfile: ./src/frontend/Dockerfile
#       target: frontend-production-docs
#       args:
#         API_ORIGIN: "https://docs.intelligentsalesman.com"
#         PUBLISH_AS_MIT: "false"
#         SW_DEACTIVATED: "true"
#     image: grow24_office_docs:frontend-production-docs
#     ports:
#       - "20003:3000"
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3000"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   y-provider-production:
#     user: "1000"
#     build: 
#       context: .
#       dockerfile: ./src/frontend/servers/y-provider/Dockerfile
#       target: y-provider-production-docs
#     image: grow24_office_docs:y-provider-production-docs
#     restart: unless-stopped
#     env_file:
#       - env.d/grow24/common
#     ports:
#       - "20004:4444"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:4444/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   nginx-proxy:
#     image: nginx:1.25
#     ports:
#       - "20080:80"
#     volumes:
#       - ./docker/files/grow24/etc/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
#       - ./data/static:/data/static:ro
#     depends_on:
#       # app-prod:
#       #   condition: service_healthy
#       #   restart: true
#       frontend-production:
#         condition: service_healthy
#         restart: true
#     restart: unless-stopped

# volumes:
#   static_data:
#     driver: local
#     driver_opts:
#       type: none
#       device: ./data/static
#       o: bind




























































name: docs-prod

services:
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=grow24_office_docs
      - MINIO_ROOT_PASSWORD=your-secure-minio-password
    ports:
      - '20009:9000'
      - '20010:9001'
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 20s
      retries: 60
    entrypoint: ""
    command: minio server --console-address :9001 /data
    volumes:
      - ./data/media:/data
    restart: unless-stopped

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
        restart: true
    entrypoint: >
      sh -c "
      /usr/bin/mc alias set grow24-office-docs http://minio:9000 grow24_office_docs your-secure-minio-password && \
      /usr/bin/mc mb grow24-office-docs/grow24-office-docs-media-storage && \
      /usr/bin/mc version enable grow24-office-docs/grow24-office-docs-media-storage && \
      /usr/bin/mc anonymous set download grow24-office-docs/grow24-office-docs-media-storage && \
      exit 0;"
    restart: "no"

  app-prod:
    build:
      context: .
      target: backend-production-docs
      args:
        DOCKER_USER: "1000"
    user: "1000"
    image: grow24_office_docs:backend-production-docs
    environment:
      - DJANGO_CONFIGURATION=Production
      - DJANGO_ALLOWED_HOSTS=docs.intelligentsalesman.com,localhost,127.0.0.1,118.139.165.145,app-prod
      - DJANGO_SECURE_SSL_REDIRECT=False  # Let Apache handle SSL
      - GUNICORN_TIMEOUT=120
    env_file:
      - env.d/grow24/common
    ports:
      - "20001:8000"
    volumes:
      - ./data/static:/data/static
    depends_on:
      minio:
        condition: service_healthy
        restart: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # celery-prod:
  #   user: "1000"
  #   image: grow24_office_docs:backend-production
  #   command: ["celery", "-A", "impress.celery_app", "worker", "-l", "INFO"]
  #   environment:
  #     - DJANGO_CONFIGURATION=Production
  #   env_file:
  #     - env.d/grow24/common
  #   volumes:
  #     - ./data/static:/data/static
  #   depends_on:
  #     - app-prod
  #   restart: unless-stopped

  frontend-production:
    build: 
      context: .
      dockerfile: ./src/frontend/Dockerfile
      target: frontend-production-docs
      args:
        API_ORIGIN: "https://docs.intelligentsalesman.com"
        PUBLISH_AS_MIT: "false"
        SW_DEACTIVATED: "true"
    image: grow24_office_docs:frontend-production-docs
    ports:
      - "20003:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  y-provider-production:
    user: "1000"
    build: 
      context: .
      dockerfile: ./src/frontend/servers/y-provider/Dockerfile
      target: y-provider-production-docs
    image: grow24_office_docs:y-provider-production-docs
    restart: unless-stopped
    env_file:
      - env.d/grow24/common
    ports:
      - "20004:4444"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # nginx-proxy:
  #   image: nginx:1.25
  #   ports:
  #     - "20080:80"
  #   volumes:
  #     - ./docker/files/grow24/etc/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ./data/static:/data/static:ro
  #   depends_on:
  #     app-prod:
  #       condition: service_started
  #       restart: true
  #     frontend-production:
  #       condition: service_started
  #       restart: true
  #     y-provider-production:
  #       condition: service_started
  #       restart: true
  #   restart: unless-stopped

volumes:
  static_data:
    driver: local
    driver_opts:
      type: none
      device: ./data/static
      o: bind